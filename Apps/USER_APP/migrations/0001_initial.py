# -*- coding: utf-8 -*-
# Generated by Django 1.9.8 on 2017-03-19 04:09
from __future__ import unicode_literals

import datetime
from django.conf import settings
import django.contrib.auth.models
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0007_alter_validators_add_error_messages'),
    ]

    operations = [
        migrations.CreateModel(
            name='Friends',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time_get', models.DateTimeField(default=datetime.datetime.now, verbose_name='\u540c\u610f\u65f6\u95f4')),
                ('passed', models.BooleanField(default=0, verbose_name='\u662f\u5426\u901a\u8fc7')),
                ('time_sent', models.DateTimeField(default=datetime.datetime.now, verbose_name='\u53d1\u9001\u65f6\u95f4')),
            ],
            options={
                'verbose_name': '\u7528\u6237\u597d\u53cb\u8d44\u6e90\u8868',
                'verbose_name_plural': '\u7528\u6237\u597d\u53cb\u8d44\u6e90\u8868',
            },
        ),
        migrations.CreateModel(
            name='Leader',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('add_time', models.DateTimeField(default=datetime.datetime.now, verbose_name='\u6210\u4e3a\u5bfc\u6e38\u65f6\u95f4')),
                ('short', models.CharField(default='', max_length=300, verbose_name='\u7b80\u4ecb')),
                ('count', models.IntegerField(default=0, verbose_name='\u5bfc\u6e38\u79ef\u5206')),
                ('times', models.IntegerField(default=0, verbose_name='\u5f00\u56e2\u6b21\u6570')),
            ],
            options={
                'verbose_name': '\u5bfc\u6e38\u4fe1\u606f\u8868',
                'verbose_name_plural': '\u5bfc\u6e38\u4fe1\u606f\u8868',
            },
        ),
        migrations.CreateModel(
            name='Mailbox',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=254, verbose_name='\u90ae\u7bb1')),
                ('style', models.CharField(choices=[('password', '\u4fee\u6539\u5bc6\u7801'), ('register', '\u6ce8\u518c')], default='register', max_length=8, verbose_name='\u7c7b\u578b')),
                ('active', models.BooleanField(default=0, verbose_name='\u5df2\u7ecf\u4f7f\u7528')),
                ('code', models.CharField(default='', max_length=50, verbose_name='\u9a8c\u8bc1\u7801')),
                ('time', models.DateTimeField(default=datetime.datetime.now, verbose_name='\u6dfb\u52a0\u65f6\u95f4')),
            ],
            options={
                'verbose_name': '\u90ae\u7bb1\u9a8c\u8bc1\u7801',
                'verbose_name_plural': '\u90ae\u7bb1\u9a8c\u8bc1\u7801',
            },
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField(default='', verbose_name='\u6d88\u606f\u5185\u5bb9')),
                ('time_sent', models.DateTimeField(default=datetime.datetime.now, verbose_name='\u53d1\u9001\u65f6\u95f4')),
                ('passed', models.BooleanField(default=0, verbose_name='\u662f\u5426\u67e5\u770b')),
                ('reply', models.BooleanField(default=0, verbose_name='\u662f\u5426\u56de\u590d')),
                ('send_all', models.BooleanField(default=0, verbose_name='\u662f\u5426\u7fa4\u53d1')),
            ],
            options={
                'verbose_name': '\u7528\u6237\u6d88\u606f\u8868',
                'verbose_name_plural': '\u7528\u6237\u6d88\u606f\u8868',
            },
        ),
        migrations.CreateModel(
            name='MyUsers',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 30 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=30, unique=True, validators=[django.core.validators.RegexValidator('^[\\w.@+-]+$', 'Enter a valid username. This value may contain only letters, numbers and @/./+/-/_ characters.')], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=30, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('nick_name', models.CharField(default='', max_length=50, verbose_name='\u6635\u79f0')),
                ('job', models.CharField(default='', max_length=50, verbose_name='\u804c\u4e1a')),
                ('birthday', models.DateField(blank=True, null=True, verbose_name='\u751f\u65e5')),
                ('gender', models.CharField(choices=[('male', '\u7537'), ('female', '\u5973')], default='female', max_length=6, verbose_name='\u6027\u522b')),
                ('count', models.IntegerField(default=0, verbose_name='\u53c2\u56e2\u6b21\u6570')),
                ('identity', models.CharField(default='', max_length=50, verbose_name='\u8eab\u4efd\u8bc1')),
                ('address', models.CharField(default='', max_length=100, verbose_name='\u5730\u5740')),
                ('mobile', models.CharField(default='', max_length=11, verbose_name='\u8054\u7cfb\u65b9\u5f0f')),
                ('baduser', models.BooleanField(default=0, verbose_name='\u662f\u5426\u62c9\u9ed1')),
                ('leader', models.BooleanField(default=0, verbose_name='\u662f\u5426\u5bfc\u6e38')),
                ('integral', models.IntegerField(default=0, verbose_name='\u79ef\u5206')),
                ('balance', models.IntegerField(default=0, verbose_name='\u4f59\u989d')),
                ('image', models.ImageField(default='image/default.jpg', max_length=200, upload_to='image/%Y/%m', verbose_name='\u5934\u50cf')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': '\u7528\u6237\u4fe1\u606f',
                'verbose_name_plural': '\u7528\u6237\u4fe1\u606f',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.AddField(
            model_name='message',
            name='receive',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_receive', to=settings.AUTH_USER_MODEL, verbose_name='\u63a5\u6536\u8005\u540d\u79f0'),
        ),
        migrations.AddField(
            model_name='message',
            name='sender',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_sender', to=settings.AUTH_USER_MODEL, verbose_name='\u53d1\u9001\u8005\u540d\u79f0'),
        ),
        migrations.AddField(
            model_name='leader',
            name='leader',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_leaders', to=settings.AUTH_USER_MODEL, verbose_name='\u7528\u6237\u540d\u79f0'),
        ),
        migrations.AddField(
            model_name='friends',
            name='friend',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_friend', to=settings.AUTH_USER_MODEL, verbose_name='\u597d\u53cb\u540d\u79f0'),
        ),
        migrations.AddField(
            model_name='friends',
            name='username',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_mine', to=settings.AUTH_USER_MODEL, verbose_name='\u7528\u6237\u540d\u79f0'),
        ),
    ]
